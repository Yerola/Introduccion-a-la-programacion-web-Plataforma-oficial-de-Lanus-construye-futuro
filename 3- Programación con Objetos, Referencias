Ejercicio 1: Variables

Veamos si queda claro: agregá al programa anterior una variable saludo_formal, inicializada con "buen día"

saludo = "hola"

saludo_formal = "buen día"

saludo_formal.upcase

------------------------------------------
Ejercicio 2: Las variables son referencias

Veamos si se entiende hasta acá: creá una variable llamada despedida que apunte al objeto "adiós", y luego enviale el mensaje size().

despedida = "adiós"

despedida.size()

------------------------------------------
Ejercicio 5: Identidad, revisada

Veamos si se entiende, dadas las siguientes asignaciones:

persona = "Graciela"
hija_de_hector = "Graciela"
hermana_de_tito = persona
hija_de_elena = "Gracielita"
hermana_de_ana = hermana_de_tito
mama_de_gustavo = "hermana_de_ana"
tia_de_gonzalo = hija_de_hector

Elegí cuáles de estas opciones referencian al mismo objeto que persona.

hermana_de_tito
hermana_de_ana

--------------------------------------------
Ejercicio 6: Equivalencia

Elegí cuál de las siguientes opciones contiene 3 referencias distintas que apunten a objetos equivalentes entre sí, pero no idénticos.

3

--------------------------------------------
Ejercicio 7: Objetos bien conocidos

Veamos si va quedando claro. Definí un objeto AbuelaClotilde que entienda un mensaje alimentar_nieto!, que haga comer! 2 veces a Fito: primero con 2000 calorias, y luego con 1000 calorías; ¡el postre no podía faltar! .

#Ya declaramos a Fito por vos.
#¡Desarrollá a la AbuelaClotilde acá!

module AbuelaClotilde
  def self.alimentar_nieto!
    Fito.comer!(2000)
    Fito.comer!(1000)
  end
end

-------------------------------------------
Ejercicio 8: Atributos y parámetros

Escribí un programa que defina la ciudad de Pepita de forma que apunte a Iruya. Y pensá: ¿cuántas referencias a Iruya hay en este programa? 

#Ya definimos a Pepita por vos.
#Ahora definí su ciudad...

Pepita.ciudad = Iruya

--------------------------------------------
Ejercicio 9: Lo 100to

Dada las siguientes definiciones:

module Pepita
  @energia = 100

  def self.volar_en_circulos!
    @energia -= 10
  end

  def self.ciudad=(una_ciudad)
    @ciudad = una_ciudad
  end
end

module Iruya
end

¿Cuáles de las siguientes opciones son referencias?

Pepita
@energia
una_ciudad
@ciudad
Iruya

---------------------------------------------------
Ejercicio 10: Objetos compartidos

Creá un programa que inicialice al amigo de Fito y al nieto de AbueloGervasio de forma que ambos conozcan al mismo objeto (Juli).

Luego, hacé que el abuelo alimente a su nieto 3 veces. ¿Qué pasará con Fito? ¿Se pondrá feliz?

#Juli, Fito y AbueloGervasio ya están declarados.
#Inicializalos y enviales mensajes acá...
AbueloGervasio.nieto = Juli
Fito.amigo = Juli
3.times{AbueloGervasio.alimentar_nieto!}

---------------------------------------------------
Ejercicio 11: Para cerrar

Definí los objetos necesarios para que podamos hacer lo siguiente:

#Configurar el plato del día de Jor
Jor.plato_del_dia = Fideos
#Que Jor le agregue picante
Jor.picantear!
#Preguntar si está picante
Fideos.picantes?
#Que Luchi suavice el plato que reciba como argumento
Luchi.suavizar! Fideos, 3
#Descartar la salsa
Fideos.descartar_la_salsa!

module Fideos
  @ajies = 0
  
  def self.ajies
    @ajies
  end
  
  def self.ajies=(cantidad)
    @ajies = cantidad
  end
  
  def self.picantes?
    @ajies > 2
  end
  def self.descartar_la_salsa!
    @ajies = 0
  end
end


module Jor
  @plato_del_dia
  
  def self.plato_del_dia=(plato)
    @plato_del_dia = plato
  end
  
  def self.picantear!
    @plato_del_dia.ajies = @plato_del_dia.ajies + 5
  end
end

module Luchi
  def self.suavizar!(plato, cantidad)
    @plato_del_dia = plato
    
     if @plato_del_dia.ajies > 10
        @plato_del_dia.descartar_la_salsa!
       
     else @plato_del_dia.ajies =  @plato_del_dia.ajies-cantidad
     end
  
  end
      
end

-----------------------------------------------------










